/* 동기식 처리
// 순차적으로 하나 씩 처리
console.log('1. 시작');
alert('2. 이 알림을 닫아야 다음 코드가 실행된다!');
console.log('3. 완료!');
*/

/* 함수
- 긴 코드를 하나의 단어로 바꿈
- 한번 만들어놓으면 필요할 때마다 재사용이 가능하다.

1. 콘솔에 순차적으로 출력!
fun1 -> fun2 -> fun3 순으로 출력!
*/
function fun1() {
  console.log('func1');
  fun2();
}
function fun2() {
  console.log('func2');
  fun3();
}
function fun3() {
  console.log('func3');
}
//함수 실행
fun1();

/** 비동기
 // - 시간이 오래 걸리는 작업을 따로 처리한 뒤 결과가 준비 되면 나중에 다시 
//   이어서 처리하는 방식 
// - 동시에 여러 작업을 수행할 수 있게 한다.
// -  파일읽기,네트워크 요청,타이머 등..


// callback 함수
//- 나중에 실행~
//- 어떤 동작을 할 지 작성!
setTimeout(funtion(){ 실행할 코드~~~!! }, 기다릴 시간);
기다리는 시간은 ms 단위로 적용된다.
1초 -> 1000ms
0.5초 -> 500ms
 */
// console.log('1. 🍔 주문');

// //3초 후 음식을 준다!
// setTimeout(() => {
//   console.log('🍔 나왔습니다~~~');
// }, 3000);

// console.log('3. 다른 사람 주문 받기!');
